// Generated by view binder compiler. Do not edit!
package com.example.io_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.example.io_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TaskListItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout TaskLinearLayout;

  @NonNull
  public final CardView itemListUser;

  @NonNull
  public final TextView taskDateTextView;

  @NonNull
  public final TextView taskNameTextView;

  private TaskListItemBinding(@NonNull CardView rootView, @NonNull LinearLayout TaskLinearLayout,
      @NonNull CardView itemListUser, @NonNull TextView taskDateTextView,
      @NonNull TextView taskNameTextView) {
    this.rootView = rootView;
    this.TaskLinearLayout = TaskLinearLayout;
    this.itemListUser = itemListUser;
    this.taskDateTextView = taskDateTextView;
    this.taskNameTextView = taskNameTextView;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static TaskListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TaskListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.task_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TaskListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TaskLinearLayout;
      LinearLayout TaskLinearLayout = rootView.findViewById(id);
      if (TaskLinearLayout == null) {
        break missingId;
      }

      CardView itemListUser = (CardView) rootView;

      id = R.id.taskDateTextView;
      TextView taskDateTextView = rootView.findViewById(id);
      if (taskDateTextView == null) {
        break missingId;
      }

      id = R.id.taskNameTextView;
      TextView taskNameTextView = rootView.findViewById(id);
      if (taskNameTextView == null) {
        break missingId;
      }

      return new TaskListItemBinding((CardView) rootView, TaskLinearLayout, itemListUser,
          taskDateTextView, taskNameTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
