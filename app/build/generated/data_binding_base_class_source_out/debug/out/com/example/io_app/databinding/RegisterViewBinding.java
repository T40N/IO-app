// Generated by view binder compiler. Do not edit!
package com.example.io_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.io_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RegisterViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText emailRegisterID;

  @NonNull
  public final TextView emailRegisterLabelID;

  @NonNull
  public final Button loginBtnID;

  @NonNull
  public final EditText nameRegisterID;

  @NonNull
  public final TextView nameRegisterLabelID;

  @NonNull
  public final EditText passwordRegisterID;

  @NonNull
  public final TextView passwordRegisterLabelID;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Button registerAcceptBtnID;

  @NonNull
  public final TextView registerTextID;

  @NonNull
  public final EditText surnameRegisterID;

  @NonNull
  public final TextView surnameRegisterLabelID;

  private RegisterViewBinding(@NonNull ConstraintLayout rootView, @NonNull EditText emailRegisterID,
      @NonNull TextView emailRegisterLabelID, @NonNull Button loginBtnID,
      @NonNull EditText nameRegisterID, @NonNull TextView nameRegisterLabelID,
      @NonNull EditText passwordRegisterID, @NonNull TextView passwordRegisterLabelID,
      @NonNull ProgressBar progressBar, @NonNull Button registerAcceptBtnID,
      @NonNull TextView registerTextID, @NonNull EditText surnameRegisterID,
      @NonNull TextView surnameRegisterLabelID) {
    this.rootView = rootView;
    this.emailRegisterID = emailRegisterID;
    this.emailRegisterLabelID = emailRegisterLabelID;
    this.loginBtnID = loginBtnID;
    this.nameRegisterID = nameRegisterID;
    this.nameRegisterLabelID = nameRegisterLabelID;
    this.passwordRegisterID = passwordRegisterID;
    this.passwordRegisterLabelID = passwordRegisterLabelID;
    this.progressBar = progressBar;
    this.registerAcceptBtnID = registerAcceptBtnID;
    this.registerTextID = registerTextID;
    this.surnameRegisterID = surnameRegisterID;
    this.surnameRegisterLabelID = surnameRegisterLabelID;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RegisterViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RegisterViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.register_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RegisterViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.email_register_ID;
      EditText emailRegisterID = rootView.findViewById(id);
      if (emailRegisterID == null) {
        break missingId;
      }

      id = R.id.email_register_label_ID;
      TextView emailRegisterLabelID = rootView.findViewById(id);
      if (emailRegisterLabelID == null) {
        break missingId;
      }

      id = R.id.login_btn_ID;
      Button loginBtnID = rootView.findViewById(id);
      if (loginBtnID == null) {
        break missingId;
      }

      id = R.id.name_register_ID;
      EditText nameRegisterID = rootView.findViewById(id);
      if (nameRegisterID == null) {
        break missingId;
      }

      id = R.id.name_register_label_ID;
      TextView nameRegisterLabelID = rootView.findViewById(id);
      if (nameRegisterLabelID == null) {
        break missingId;
      }

      id = R.id.password_register_ID;
      EditText passwordRegisterID = rootView.findViewById(id);
      if (passwordRegisterID == null) {
        break missingId;
      }

      id = R.id.password_register_label_ID;
      TextView passwordRegisterLabelID = rootView.findViewById(id);
      if (passwordRegisterLabelID == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.register_accept_btn_ID;
      Button registerAcceptBtnID = rootView.findViewById(id);
      if (registerAcceptBtnID == null) {
        break missingId;
      }

      id = R.id.register_text_ID;
      TextView registerTextID = rootView.findViewById(id);
      if (registerTextID == null) {
        break missingId;
      }

      id = R.id.surname_register_ID;
      EditText surnameRegisterID = rootView.findViewById(id);
      if (surnameRegisterID == null) {
        break missingId;
      }

      id = R.id.surname_register_label_ID;
      TextView surnameRegisterLabelID = rootView.findViewById(id);
      if (surnameRegisterLabelID == null) {
        break missingId;
      }

      return new RegisterViewBinding((ConstraintLayout) rootView, emailRegisterID,
          emailRegisterLabelID, loginBtnID, nameRegisterID, nameRegisterLabelID, passwordRegisterID,
          passwordRegisterLabelID, progressBar, registerAcceptBtnID, registerTextID,
          surnameRegisterID, surnameRegisterLabelID);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
